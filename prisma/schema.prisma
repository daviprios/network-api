generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = "postgres://root:123456@db:5432"
}

model User {
  ID Int @id @default(autoincrement())

  name        String
  phoneNumber String? @unique
  email       String  @unique
  username    String  @unique
  password    String

  avatarURL String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  Post       Post[]
  GroupUsers GroupUsers[]
  Session    Session[]
}

model Group {
  ID Int @id @default(autoincrement())

  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  Post       Post[]
  GroupUsers GroupUsers[]
}

enum GroupUserRole {
  Owner
  Administrator
  Moderator
  Member
}

model GroupUsers {
  groupID Int
  group   Group @relation(fields: [groupID], references: [ID])

  userID Int
  user   User @relation(fields: [userID], references: [ID])

  role GroupUserRole

  @@id([groupID, userID])
}

model Post {
  ID Int @id @default(autoincrement())

  mediaContentURL String?
  text            String

  userID Int?
  user   User? @relation(fields: [userID], references: [ID], onDelete: SetNull)

  groupID Int
  group   Group @relation(fields: [groupID], references: [ID])

  parentPostID Int    @map("PostID")
  post         Post   @relation("PostToPost", fields: [parentPostID], references: [ID])
  Post         Post[] @relation("PostToPost")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Session {
  ID String @id @default(uuid())

  userID Int
  user   User @relation(fields: [userID], references: [ID])
}

model Invite {
  ID Int @id @default(autoincrement())

  code String @unique @default(uuid())
}
